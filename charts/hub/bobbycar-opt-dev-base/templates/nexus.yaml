---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nexus-data
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.nexus.resources.storage }}
---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: nexus3
  namespace: {{ .Release.Namespace }}
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    app: nexus3
    deploymentconfig: nexus3
  template:
    metadata:
      labels:
        app: nexus3
        deploymentconfig: nexus3
    spec:
      volumes:
        - name: nexus-data
          persistentVolumeClaim:
            claimName: nexus-data
      containers:
        - name: nexus3
          image: {{ .Values.nexus.image.repository }}
          ports:
            - containerPort: {{ .Values.nexus.image.containerPort }}
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: nexus-data
              mountPath: /nexus-data
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
---
kind: Service
apiVersion: v1
metadata:
  name: nexus3
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: 8081-tcp
      protocol: TCP
      port: {{ .Values.nexus.image.containerPort }}
      targetPort: {{ .Values.nexus.image.containerPort }}
  selector:
    app: nexus3
    deploymentconfig: nexus3
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: nexus3
  namespace: {{ .Release.Namespace }}
spec:
  to:
    kind: Service
    name: nexus3
    weight: 100
  port:
    targetPort: 8081-tcp
  wildcardPolicy: None


