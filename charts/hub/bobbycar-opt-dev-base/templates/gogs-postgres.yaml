---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgresql
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.gogs.resources.storageDatabase }}
---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/part-of: {{ include "app.name" . }}
    helm.sh/chart: {{ include "chart.name-version" . }}
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: postgresql
  template:
    metadata:
      labels:
        name: postgresql
    spec:
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
      containers:
        - readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-name
          ports:
            - containerPort: {{ .Values.gogs.database.image.containerPort }}
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/pgsql/data
          terminationMessagePolicy: File
          image: {{ .Values.gogs.database.image.repository }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
---
kind: Service
apiVersion: v1
metadata:
  name: postgresql
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: postgresql
      protocol: TCP
      port: {{ .Values.gogs.database.image.containerPort }}
      targetPort: {{ .Values.gogs.database.image.containerPort }}
  selector:
    name: postgresql
---
kind: Secret
apiVersion: v1
metadata:
  name: postgresql
  namespace: {{ .Release.Namespace }}
stringData:
  database-name: {{ .Values.gogs.database.name }}
  database-password: {{ .Values.gogs.database.password }}
  database-user: {{ .Values.gogs.database.user }}
type: Opaque


